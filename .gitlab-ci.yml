stages:
    -   build
    -   deploy

build_image:
  image: docker:latest
  services:
    - docker:dind
  stage: build
  
      
  before_script:
    - docker info
    - docker login -u registry -p $CI_BUILD_TOKEN $CI_REGISTRY
  script:
    - docker build -t $CI_REGISTRY_IMAGE:$CI_BUILD_TAG ./Frontend
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_TAG
    
deploy_image:
  stage: build
  when: manual
  image: alpine/helm:latest
  script:
    #- helm --namespace $NAMESPACE upgrade -i $REPO_NAME --set image.tag=$TAG,env=$ENV,image.repository=$REPO_REGISTRY_URL $PATH_TO_VALUES
    #- helm --namespace $KUBE_NAMESPACE upgrade -i $CI_REGISTRY_IMAGE --set image.tag=$CI_BUILD_TAG,env=$ENV,image.repository=CI_REGISTRY $PATH_TO_VALUES
    
    - kubectl config set-cluster k8s --server="${KUBE_URL}"
    - kubectl config set clusters.k8s.certificate-authority-data ${KUBE_CA_PEM_FILE}
    - kubectl config set-credentials gitlab --token="${KUBE_TOKEN}"
    - kubectl config set-context default --cluster=k8s --user=gitlab
    - kubectl config use-context default
    - helm init --client-only
    - helm upgrade go-hello-world ./ --install --set image.tag=${$CI_BUILD_TAG}

  #tags:
  #  - k8s
  #  - dev