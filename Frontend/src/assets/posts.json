[
        {
            "id" : 1,
            "title" : "KnockoutJs in 2019",
            "excerpt" : "My personal experience with KnockoutJs and opinion on it's relevance in 2019",
            "body" : "Knockout is a little mentioned front-end JavaScript framework capable of enabling SPAs and the creation of interactive immersive web experiences. Knockout is an open source framework developed by Steve Sanderson with its initial release in July 5, 2010. It follows the Model-View-ViewModel pattern using observables to make your UI automatically stay in sync with an underlying data model. \n\n    The good.\nKnockout has been developed to follow the principles of MVVM very well. That facilitates a separation of development of the graphical user interface and the JavaScript models. \nIt is a small framework quoted as 13kb after gzipping on knockoutjs.com. this means that it does what it’s designed to but is extensive when required and it is easy to create your own extensions as it’s open source. \nBeing open source also means it can be trusted and if you discover a bug it is relatively easy to raise it as an issue or fix it yourself.  \n    It is also very mature compared with some of the more popular frameworks being used this means it’s stable. Its maturity combined with the fact it’s not designed to be a large all singing all dancing framework means it is extremely polished. \n\n    The bad.\n    It has less tools included compared to some of the bigger frameworks which means you have to install extra packages as they aren’t already there.\n\nWith out Knockout decorators which are an extension on knockout it can be fiddley always having to add parenthesis and other syntactical issues. Luckily Knockout decorators provide the syntactical sugar to make it the code easy to work with and read.    \n\nThe ugly    \nDoesn’t work with JQuery and its library of intensions which can be a problem if you, like me, you work in a company which insists you use JQuery tools for date time pickers and searchable drop downs ect. \n\n    \nCompetitors    \nIs it still viable? Used?    \nKnockouts last stable release was February 22, 2019 which was 4 months ago. This shows work is still going on and the github account also has hundreds of pull requests which are mainly extensions which can be added on. This shows work is still very much going on. \nIf you want a simple MVVM JavaScript framework that gets the job done and is open source this is what you want. If you want it but don’t like open source, then you may prefer ReactJS. If you don’t like opensource or having to add extensions, you may prefer angular.     \n\n    Whatever you choose I hope you enjoy programming!",
            "coverImage" : "/assets/knockoutjs.png",
            "author" : "brian" 
        },
        {
            "id" : 2,
            "title" : "KnockoutJs in 2019",
            "excerpt" : "My personal experience with KnockoutJs and opinion on it's relevance in 2019",
            "body" : "Knockout is a little mentioned front-end JavaScript framework capable of enabling SPAs and the creation of interactive immersive web experiences. Knockout is an open source framework developed by Steve Sanderson with its initial release in July 5, 2010. It follows the Model-View-ViewModel pattern using observables to make your UI automatically stay in sync with an underlying data model. \n\n    The good.\nKnockout has been developed to follow the principles of MVVM very well. That facilitates a separation of development of the graphical user interface and the JavaScript models. \nIt is a small framework quoted as 13kb after gzipping on knockoutjs.com. this means that it does what it’s designed to but is extensive when required and it is easy to create your own extensions as it’s open source. \nBeing open source also means it can be trusted and if you discover a bug it is relatively easy to raise it as an issue or fix it yourself.  \n    It is also very mature compared with some of the more popular frameworks being used this means it’s stable. Its maturity combined with the fact it’s not designed to be a large all singing all dancing framework means it is extremely polished. \n\n    The bad.\n    It has less tools included compared to some of the bigger frameworks which means you have to install extra packages as they aren’t already there.\n\nWith out Knockout decorators which are an extension on knockout it can be fiddley always having to add parenthesis and other syntactical issues. Luckily Knockout decorators provide the syntactical sugar to make it the code easy to work with and read.    \n\nThe ugly    \nDoesn’t work with JQuery and its library of intensions which can be a problem if you, like me, you work in a company which insists you use JQuery tools for date time pickers and searchable drop downs ect. \n\n    \nCompetitors    \nIs it still viable? Used?    \nKnockouts last stable release was February 22, 2019 which was 4 months ago. This shows work is still going on and the github account also has hundreds of pull requests which are mainly extensions which can be added on. This shows work is still very much going on. \nIf you want a simple MVVM JavaScript framework that gets the job done and is open source this is what you want. If you want it but don’t like open source, then you may prefer ReactJS. If you don’t like opensource or having to add extensions, you may prefer angular.     \n\n    Whatever you choose I hope you enjoy programming!",
            "coverImage" : "/assets/knockoutjs.png",
            "author" : "brian"
        }
    ]
